{"name":"Cakephp-google-api-plugin","tagline":"Api do Google para CakePHP que permite facilmente ler dados do Google","body":"### Requerido\r\n* [CakePHP 2.x](https://github.com/cakephp/cakephp)\r\n\r\n\r\n### Criando e Configurando o **Google Console**.\r\nAntes de começarmos a experimentar esta linda biblioteca do **Google** precisamos criar uma conta no google (se é que é preciso dizer isso) e acessar o [Google Console](https://console.developers.google.com/).\r\nDentro do **Google Console** Iremos em:\r\n* Criar Projeto (E crie um projeto)\r\n* Projeto Criado vá em **APIs e Autenticação > APIS** (Procure por **Analytics API** que o  usaremos de exemplo)\r\n* Escolha o Analytics API e clique quem **ATIVAR**\r\n* Agora vá em APIs e vAutenticação > Credenciais > Criar um Novo ID Client**\r\n* Selecione o tipo Conta Serviço e **Criar ID Client**\r\n* Será gerada uma **chave P12** baixe e guarde pois ela sera usada em todos os projetos com o Google Api\r\n* Note que foi gerado **ID do cliente, Endereço de e-mail, Impressões do certificado, Chaves P12 e JSON**.\r\n* Salve todas essas informações para serem utilizadas mais tarde e feche o Google Console.\r\n\r\n### Configurando Plugin\r\nO Plugin é bem simples, dando em consideração que eu desenvolvi apenas o esqueleto da coisa, porem funcionando! =)\r\nFaça o checkout do plugin em app/Plugin\r\n\r\n```\r\n$ git clone git@github.com:luuckx2/CakePHP-Google-API-Plugin.git GoogleApi\r\n```\r\n\r\nApós concluir o clone do repositório vamos as configurações, você precisa definir as informações do Google Console no Plugin.\r\n1. Certifique-se que sua aplicação está chamando o Plugin use :\r\n```\r\nCakePlugin::loadAll();\r\n// ou\r\nCakePlugin::load('GoogleApi'); \r\n```\r\n\r\n2. Copie a Chave P12 baixada do Google Para app/Plugin/GoogleApi e deixe na Raiz do Plugin mesmo.\r\n3. Vá em GoogleApi/Config e abra o arquivo Core.php\r\n4. Edite de acordo com as informações obtidas do Google Console\r\n\r\n```\r\n$config = array('GoogleApi'=>array(\r\n\r\n\t// Dados do Cliente Google Console\r\n\t'client' => array(\r\n\t\t'ApplicationName' => 'ApplicationName',\r\n\t\t'client_id' => 'xxxxxxxxxxxxxxxxxx.apps.googleusercontent.com',\r\n\t\t'email_address' => 'xxxxxxxxxxxxxxx@developer.gserviceaccount.com',\r\n\t\t'key_file_location' => APP . 'Plugin' . DS . 'GoogleApi' . DS . 'your_file.p12',\r\n\t),\r\n));\r\n```\r\n\r\n5. Para utilizar o **Google Analytics** é preciso mais uma configuração. \r\nSabe aquele e-mail que o Google Console nos forneceu? Precisamos adiciona-lo na **lista de usuários** na conta do Google Analytics que desejamos obter dados. Isso mesmo! Como administrador ( All Permissions).\r\nCaso não seja utilizado o Google Analytics Ignore.\r\n\r\n6. Agora vamos testar!\r\nNo AppController da sua aplicação Adicione\r\n\r\n```\r\npublic $components = array('GoogleApi.GoogleApi');\r\n```\r\n\r\n7 . E em algum controller de sua preferencia execute\r\n\r\n$analytics = $this->GoogleApi->Analytics();\r\n\r\n```\r\n// pega o primeiro profile_id da conta do Google Analytics, caso saiba o id é só inserir manualmente (string)\r\n$profile_id = $this->GoogleApi->getFirstprofileAnalyticsId($analytics);\r\n$results = $this->GoogleApi->getMonthsVisits($analytics,$profile_id);\r\npr($results);\r\n```\r\nKabum! Se tudo ocorrer como planejado voce obterá a lista de visitas dos últimos 12 messes.\r\n\r\n\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}